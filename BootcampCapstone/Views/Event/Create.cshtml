@model BootcampCapstone.Event

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    if (!String.IsNullOrEmpty(User.Identity.Name)) {
        <div class="sidebar span3">
            <div class="well sidebar-nav">
                <ul class="nav nav-list">
                    <li><a href="#">My Events</a></li>
                    <li class="active">@Html.ActionLink("Create Event", "Create", "Event")</li>
                    <li>@Html.ActionLink("Find Events", "Index", "Event")</li>
                    <li>@Html.ActionLink("My Account", "MyAccount", "User")</li>
                </ul>
            </div><!--/.well -->
        </div><!--/span-->
    }
    <div class="container centered">
        <div class="form-generic">
            <h2 class="form-generic-heading">Create Event</h2>
            <fieldset class ="form-generic-column">
                <div class="form-line">
                    @Html.LabelFor(model => model.title)
                </div>
                <div class="form-line">
                    @Html.EditorFor(model => model.title)
                    @Html.ValidationMessageFor(model => model.title)
                </div>

                <div class="form-line">
                    @Html.LabelFor(model => model.startDate)
            
                </div>
                <div class="form-line">
                    @Html.TextBoxFor(model => model.startDate, new { @class = "form-control datepicker", placeholder = "Enter Drop-off date here..." })
                    @Html.ValidationMessageFor(model => model.startDate)
                </div>

                <div class="form-line">
                    @Html.LabelFor(model => model.eventDescription)
                </div>
                <div class="form-line">
                    @Html.EditorFor(model => model.eventDescription)
                    @Html.ValidationMessageFor(model => model.eventDescription)
                </div>

                <div class="form-line">
                    @Html.LabelFor(model => model.location)
                </div>
                <div class="form-line">
                    @Html.EditorFor(model => model.location)
                    @Html.ValidationMessageFor(model => model.location)
                </div>

                <div class="form-line">
                    @Html.LabelFor(model => model.logoPath)
                </div>
                <div class="form-line">
                    @Html.EditorFor(model => model.logoPath)
                    @Html.ValidationMessageFor(model => model.logoPath)
                </div>
            </fieldset> <!-- form-generic-column -->
            <fieldset class ="form-generic-column">
                <div class="form-line">
                    @Html.LabelFor(model => model.categoryID, "Category")
                </div>
                <div class="form-line">
                    @Html.DropDownList("categoryID", String.Empty)
                    @Html.ValidationMessageFor(model => model.categoryID)
                </div>

                <div class="form-line">
                    @Html.LabelFor(model => model.endDate)
                </div>
                <div class="form-line">
                    @Html.EditorFor(model => model.endDate)
                    @Html.ValidationMessageFor(model => model.endDate)
                </div>

                <div class="form-line">
                    @Html.LabelFor(model => model.typeID, "Type")
                </div>
                <div class="form-line">
                    @Html.DropDownList("typeID", String.Empty)
                    @Html.ValidationMessageFor(model => model.typeID)
                </div>

                <div class="form-line">
                    @Html.LabelFor(model => model.eventStatus)
                </div>
                <div class="form-line">
                    @Html.EditorFor(model => model.eventStatus)
                    @Html.ValidationMessageFor(model => model.eventStatus)
                </div>

                <input type="submit" value="Create"class="btn btn-large btn-primary top-spacing-small" />
            </fieldset> <!-- form-generic-column -->
        </div> <!-- /form-generic -->
    </div> <!-- container -->
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}

    <script type="text/javascript">
    $(function () { // will trigger when the document is ready
       $('.datepicker').datepicker(); //Initialise any date pickers
    });
    </script>
